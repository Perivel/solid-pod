import{renderToStream as t,createComponent as r,renderToStringAsync as n,renderToString as e}from"solid-js/web";import{DateTime as o}from"@swindle/core";import s from"express";function i(t,r){for(var n=0,e=t.length-1;e>=0;e--){var o=t[e];"."===o?t.splice(e,1):".."===o?(t.splice(e,1),n++):n&&(t.splice(e,1),n--)}if(r)for(;n--;n)t.unshift("..");return t}function u(t){var r=c(t),n="/"===a(t,-1);return(t=i(p(t.split("/"),(function(t){return!!t})),!r).join("/"))||r||(t="."),t&&n&&(t+="/"),(r?"/":"")+t}function c(t){return"/"===t.charAt(0)}function l(){var t=Array.prototype.slice.call(arguments,0);return u(p(t,(function(t,r){if("string"!=typeof t)throw new TypeError("Arguments to path.join must be strings");return t})).join("/"))}function p(t,r){if(t.filter)return t.filter(r);for(var n=[],e=0;e<t.length;e++)r(t[e],e,t)&&n.push(t[e]);return n}var a="b"==="ab".substr(-1)?function(t,r,n){return t.substr(r,n)}:function(t,r,n){return r<0&&(r=t.length+r),t.substr(r,n)};const f=(i,u,c=[])=>{const p=s();c.length>0&&p.use(...c),p.use(s.static(l(__dirname,"assets"))),p.get("*",(async(o,s)=>{const c={server:{debug:"development"===u.env,port:u.port,url:o.url}};if("stream"===u.ssr)t((()=>r(i,{context:c}))).pipe(s);else try{let t;t="async"===u.ssr?await n((()=>r(i,{context:c}))):e((()=>r(i,{context:c}))),s.status(200).send(t)}catch(t){s.status(500).send("Server Error")}})),console.log("Starting app"),p.listen(u.port,(()=>{const t=`[${o.Now().toString()}]: Application successfully running on ${u.host}:${u.port}`;console.log(t)})).on("error",(t=>{throw t}))};export{f as runServer};
