import{renderToStream as t,createComponent as e,renderToStringAsync as n,renderToString as s}from"solid-js/web";import{DateTime as o}from"@swindle/core";import{Process as r}from"@swindle/os";import{Path as i}from"@swindle/filesystem";import c from"express";import{renderTags as l}from"solid-meta";const a=(a,p,m=[])=>{const d=c();m.length>0&&d.use(...m),d.use(c.static(i.FromSegments(r.Cwd(),"assets").toString())),d.get("*",(async(o,r)=>{const i={server:{debug:"development"===p.env,port:p.port,url:o.url,tags:[]}};if("stream"===p.ssr)t((()=>e(a,{context:i}))).pipe(r);else try{let t;t="async"===p.ssr?await n((()=>e(a,{context:i}))):s((()=>e(a,{context:i}))),r.status(200).send(`\n        <!doctype html>\n        <html lang=${p.lang}>\n          <head>\n          <meta charset=${p.charset} />\n          <meta\n            name="viewport"\n            content="width=device-width, initial-scale=1"\n          />\n          <link\n            rel="shortcut icon"\n            type="image/ico"\n            href="/assets/favicon.ico"\n          />\n          <title>${p.title}</title>\n            ${l(i.server.tags)}\n          </head>\n          <body>\n            <noscript>JavaScript is required to run this app.</noscript>\n            <div id="root">${t}</div>\n            <script type="module" src="js/index.js" async><\/script>\n          </body>\n        </html>\n        `)}catch(t){console.log(t.message),r.status(500).send("Server Error")}})),console.log("Starting app"),d.listen(p.port).on("listening",(()=>{console.log(`[${o.Now().toString()}]: Application successfully running on ${p.host}:${p.port}`)})).on("error",(t=>{throw t}))};export{a as runServer};
