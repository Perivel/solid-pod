import{renderToStream as t,createComponent as e,renderToStringAsync as n,renderToString as s}from"solid-js/web";import{DateTime as o}from"@swindle/core";import{join as r}from"path";import i from"express";import{renderTags as c}from"solid-meta";const l=(l,a,p=[])=>{const d=i();p.length>0&&d.use(...p);const m=r(process.cwd(),"/dist/public");d.use(i.static(m)),d.get("*",(async(o,r)=>{const i={server:{debug:"development"===a.env,port:a.port,url:o.url,tags:[]}};if("stream"===a.ssr)t((()=>e(l,{context:i}))).pipe(r);else try{let t;t="async"===a.ssr?await n((()=>e(l,{context:i}))):s((()=>e(l,{context:i}))),r.status(200).send(`\n        <!doctype html>\n        <html lang=${a.lang}>\n          <head>\n          <link rel="stylesheet" href="${a.style}" />\n          <meta charset=${a.charset} />\n          <meta\n            name="viewport"\n            content="width=device-width, initial-scale=1"\n          />\n          <link\n            rel="shortcut icon"\n            type="image/ico"\n            href="/assets/favicon.ico"\n          />\n          <title>${a.title}</title>\n            ${c(i.server.tags)}\n          </head>\n          <body>\n            <noscript>JavaScript is required to run this app.</noscript>\n            <div id="root">${t}</div>\n            <script type="module" src="scripts/client.js" async><\/script>\n          </body>\n        </html>\n        `)}catch(t){console.log(t.message),r.status(500).send("Server Error")}})),console.log("Starting app"),d.listen(a.port,(()=>console.log(`[${o.Now().toString()}]: Application successfully running on ${a.host}:${a.port}`))).on("error",(t=>{throw t}))};export{l as runServer};
