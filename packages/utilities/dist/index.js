import{Process as e}from"@swindle/os";import{Path as t,FileSystem as o,FileOpenFlag as r,FileSystemException as s}from"@swindle/filesystem";import{rollup as n}from"rollup";import{BaseException as i,StringFormatter as l}from"@swindle/core";import a from"@rollup/plugin-node-resolve";import{babel as p}from"@rollup/plugin-babel";import u from"@rollup/plugin-json";import c from"rollup-plugin-typescript2";import m from"rollup-plugin-styles";import d from"rollup-plugin-copy";import g from"rollup-plugin-polyfill-node";import w from"@rollup/plugin-image";import f from"@rollup/plugin-commonjs";import{Container as y}from"@swindle/container";class S extends i{constructor(e="Something went wrong"){super(e)}}class x extends S{constructor(e="Something went wrong"){super(e)}}const j=new y;j.bind(l,(e=>new l));const b={root:e.Cwd(),outputDir:t.FromSegments(e.Cwd(),"dist"),clientEntryPoint:t.FromSegments(e.Cwd(),"src/client.ts"),serverEntryPoint:t.FromSegments(e.Cwd(),"src/server.ts"),assetsDir:t.FromSegments(e.Cwd(),"src/assets/**/**"),onBeforeRollup:async()=>{},onRollup:async()=>{},onBeforeGenerate:async()=>{},onGenerate:async()=>{}},D={compilerOptions:{strict:!0,target:"ESNext",module:"ESNext",moduleResolution:"node",allowSyntheticDefaultImports:!0,esModuleInterop:!0,jsx:"preserve",jsxImportSource:"solid-js"}},v=(e,o,r,s,n,i,y,S)=>{const x=[...o,...r,"@solidusjs/core","@solidusjs/client","@solidusjs/server","@solidusjs/utilities"],b=j.get(l),D={};o.forEach((e=>{Object.defineProperty(D,e,{value:b.camelCase(e)})}));const v={declaration:!0,declarationDir:t.FromSegments(n,"types").toString()},E={tsconfig:t.FromSegments(s,"tsconfig.json").toString(),check:!0,clean:!0,abortOnError:!0,rollupCommonJSResolveHack:!1,useTsconfigDeclarationDir:!0,cwd:s.toString(),tsconfigOverride:v},C={input:i.toString(),output:[{file:t.FromSegments(n,"index.js").toString(),format:"esm",globals:D}],external:x,plugins:[g(),a({preferBuiltins:!0,exportConditions:["solid"],extensions:[".js",".jsx",".ts",".tsx"],mainFields:["main","module","browser","exports"]}),c(E),f(),p({babelHelpers:"bundled",presets:[["solid",{generate:"ssr",hydratable:!0}]],exclude:"node_modules/**",extensions:[".js",".jsx",".ts",".tsx"]}),u(),m(),w(),d({targets:[{src:S.toString(),dest:"dist/public"}]})],preserveEntrySignatures:!1,treeshake:!0};return[{input:y.toString(),output:[{file:t.FromSegments(n,"public/js/index.js").toString(),format:"esm",globals:D}],external:x,plugins:[c(E),a({preferBuiltins:!0,exportConditions:["solid"],extensions:[".js",".jsx",".ts",".tsx"]}),g(),f({include:"node_modules/**"}),p({babelHelpers:"bundled",presets:[["solid",{generate:"dom",hydratable:!0}]],exclude:"node_modules/**",extensions:[".js",".jsx",".ts",".tsx"]}),u(),m(),w(),d({targets:[{src:S.toString(),dest:"dist/public"}]})],preserveEntrySignatures:!1,treeshake:!0},C]},E=async(e,t)=>{t.output&&(Array.isArray(t.output)?await Promise.all(t.output.map((async t=>await e.write(t)))):await e.write(t.output))},C=async(s={})=>{const i=(e=>({root:e.root||b.root,outputDir:e.outputDir||b.outputDir,clientEntryPoint:e.clientEntryPoint||b.clientEntryPoint,serverEntryPoint:e.serverEntryPoint||b.serverEntryPoint,assetsDir:e.assetsDir||b.assetsDir,onBeforeRollup:e.onBeforeRollup||b.onBeforeRollup,onRollup:e.onRollup||b.onRollup,onBeforeGenerate:e.onBeforeGenerate||b.onBeforeGenerate,onGenerate:e.onGenerate||b.onGenerate}))(s),l=(await(async(s=e.Cwd())=>{const n=t.FromSegments(s,"tsconfig.json");let i=D;if(await o.Contains(n)){const e=await o.Open(n,r.READ),t=await e.readAll();await e.close(),i=JSON.parse(t)}return i})(i.root),await(async(s=e.Cwd())=>{const n=t.FromSegments(s,"package.json");let i={deps:[],dev:[]};if(!await o.Contains(n))throw new S("Cannot find package.json file.");{const e=await o.Open(n,r.READ),t=await e.readAll();await e.close();const s=JSON.parse(t);i.deps=Object.keys(s.dependencies),i.dev=Object.keys(s.devDependencies)}return i})()),a=v(0,l.deps,l.dev,i.root,i.outputDir,i.serverEntryPoint,i.clientEntryPoint,i.assetsDir);try{await i.onBeforeRollup();const e=await Promise.all(a.map((async e=>await n(e))));await i.onRollup(),await o.Contains(i.outputDir)&&await o.Delete(i.outputDir,!0,!0),await i.onBeforeGenerate();const t=e.length;for(let o=0;o<t;o++)await E(e[o],a[o]);await i.onGenerate()}catch(e){let t;throw t=e,new x(t.message)}};export{x as SolidusBuildException,S as SolidusException,C as buildApp,v as loadBuildConfigurationOptions};
